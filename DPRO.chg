"18:34:24, 25 April 2019: Compressed sources"!

DevelopmentSessionManager installNew!

SessionManager current defaultResourceLibrary loadFlags: 0.
SessionManager current stashBootInfo!

"Ensure all structures have calculated size to avoid recompilation messages later"
ExternalStructure allSubclasses do: [:e | e ensureDefined]!

"Mark all the booted packages as base"
Package manager markAllPackagesAsBase!

"Save the booted image"
| devsesh |
SourceManager default flushChanges.
devsesh := SessionManager current.
devsesh onPreSaveImage.
[devsesh primSnapshot: devsesh imageFileName
	backup: false
	type: 0
	maxObjects: 24576*1024
] ensure: [devsesh onPostSaveImage]!

"Remove unnecessary .chg files"
File delete: 'DBOOT.chg'!

SessionManager current onExit; primQuit: 0!

"21:07:43, 02 August 2019: Dolphin Smalltalk Professional started"!

Presenter subclass: #LightsOutCell
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
LightsOutCell guid: (GUID fromString: '{777ca124-c8ee-48ed-8bfc-4d3f4665eee4}')!
LightsOutCell comment: ''!
!LightsOutCell categoriesForClass!MVP-Presenters! !
!LightsOutCell class methodsFor!
defaultModel	
	^true asValue! !
!LightsOutCell class categoriesFor: #defaultModel!public! !

!LightsOutCell class methodsFor!
defaultModel	
	^true asValue! !
!LightsOutCell class categoriesFor: #defaultModel!public! !

View subclass: #LightsOutCellView
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
LightsOutCellView guid: (GUID fromString: '{230e11d9-7588-419d-89a6-6b1d5219516a}')!
LightsOutCellView comment: ''!
!LightsOutCellView categoriesForClass!MVP-Resources-Misc! !
!LightsOutCellView methodsFor!
onPaintRequired: aPaintEvent
	self model value 
		ifTrue: [
			| cellRect canvas|
			cellRect := self clientRectangle insetBy: 5.
			canvas := aPaintEvent canvas.
			canvas fillRectangle: cellRect brush: (Brush color: self colorWhenOn)]! !
!LightsOutCellView categoriesFor: #onPaintRequired:!public! !

!LightsOutCellView methodsFor!
onPaintRequired: aPaintEvent
	self model value 
		ifTrue: [
			| cellRect canvas|
			cellRect := self clientRectangle insetBy: 5.
			canvas := aPaintEvent canvas.
			canvas fillRectangle: cellRect color: self colorWhenOn]! !
!LightsOutCellView categoriesFor: #onPaintRequired:!public! !

	^ ColorDialog showModal!

!LightsOutCellView methodsFor!
colorWhenOn
	^(RGB r: 255 g: 255 b: 64)! !
!LightsOutCellView categoriesFor: #colorWhenOn!public! !

!LightsOutCellView class methodsFor!
defaultModel	
	^true asValue ! !
!LightsOutCellView class categoriesFor: #defaultModel!public! !

!LightsOutCellView methodsFor!
connectModel
	self model when: #valueChanged send: #invalidate to: self! !
!LightsOutCellView categoriesFor: #connectModel!public! !

!LightsOutCellView methodsFor!
onLeftButtonDoubleClicked: aMouseEvent
		self presenter trigger: #cellAction! !
!LightsOutCellView categoriesFor: #onLeftButtonDoubleClicked:!public! !

!LightsOutCellView class methodsFor!
resource_Default_view
	"Answer the literal data from which the 'Default view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Default_view)
	"

	^#(#'!!STL' 4 788558 10 ##(Smalltalk.STBViewProxy) ##(Smalltalk.LightsOutCellView) 34 12 nil nil 34 2 8 1140850688 1 416 721990 2 ##(Smalltalk.ValueHolder) nil false 1310726 ##(Smalltalk.EqualitySearchPolicy) true 786694 ##(Smalltalk.ColorDefault) 8 4278190080 nil 5 nil nil nil 416 983302 ##(Smalltalk.MessageSequence) 138 144 34 1 721670 ##(Smalltalk.MessageSend) #createAt:extent: 34 2 328198 ##(Smalltalk.Point) 1 1 706 201 201 416 983302 ##(Smalltalk.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 100 0 0 0 100 0 0 0] 8 #() 706 193 193 nil 27 )! !
!LightsOutCellView class categoriesFor: #resource_Default_view!public!resources-views! !

!LightsOutCell class methodsFor!
resource_Default_view
	"Answer the literal data from which the 'Default view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Default_view)
	"

	^#(#'!!STL' 4 788558 10 ##(Smalltalk.STBViewProxy) ##(Smalltalk.LightsOutCellView) 34 12 nil nil 34 2 8 1140850688 1 416 721990 2 ##(Smalltalk.ValueHolder) nil false 1310726 ##(Smalltalk.EqualitySearchPolicy) true 786694 ##(Smalltalk.ColorDefault) 8 4278190080 nil 7 nil nil nil 416 983302 ##(Smalltalk.MessageSequence) 138 144 34 1 721670 ##(Smalltalk.MessageSend) #createAt:extent: 34 2 328198 ##(Smalltalk.Point) 3071 21 706 201 201 416 983302 ##(Smalltalk.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 5 0 0 10 0 0 0 99 6 0 0 110 0 0 0] 8 #() 706 193 193 nil 27 )! !
!LightsOutCell class categoriesFor: #resource_Default_view!public!resources-views! !

loc := LightsOutCell show!

loc model value: false!

loc model value: true!

Object subclass: #LightsOutBoard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
LightsOutBoard guid: (GUID fromString: '{3c2b6878-c5ac-4b9a-a371-4209655cffdc}')!
LightsOutBoard comment: ''!
!LightsOutBoard categoriesForClass!Kernel-Objects! !
Object subclass: #LightsOutBoard
	instanceVariableNames: 'cells'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #LightsOutBoard
	instanceVariableNames: 'cells'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!LightsOutBoard class methodsFor!
withSize: anInteger
	^super new setSize: anInteger 
	! !
!LightsOutBoard class categoriesFor: #withSize:!public! !

!LightsOutBoard class methodsFor!
new	
	^self withSize: self defaultSize! !
!LightsOutBoard class categoriesFor: #new!public! !

!LightsOutBoard class methodsFor!
defaultSize
	^10! !
!LightsOutBoard class categoriesFor: #defaultSize!public! !

!LightsOutBoard methodsFor!
setSize: anInteger
	cells := (1 to: anInteger squared) collect: [:each | true asValue]! !
!LightsOutBoard categoriesFor: #setSize:!public! !

!LightsOutBoard methodsFor!
cells
	^cells! !
!LightsOutBoard categoriesFor: #cells!public! !

!LightsOutBoard methodsFor!
size 
	^cells size sqrt truncated ! !
!LightsOutBoard categoriesFor: #size!public! !

Shell subclass: #LightsOutGame
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
LightsOutGame guid: (GUID fromString: '{b281cf1f-7617-4857-b8e8-6539b294d19b}')!
LightsOutGame comment: ''!
!LightsOutGame categoriesForClass!MVP-Presenters! !
!LightsOutGame class methodsFor!
defaultModel	
	^LightsOutBoard new! !
!LightsOutGame class categoriesFor: #defaultModel!public! !

!LightsOutGame methodsFor!
onViewOpened
	super onViewOpened.
	self createCellPresenters
	! !
!LightsOutGame categoriesFor: #onViewOpened!public! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self model cells do: [:eachCell | 
					| cp |
					cp := LightsOutCell createIn: self on: eachCell ]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

Shell subclass: #LightsOutGame
	instanceVariableNames: 'cellPresenters'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!LightsOutGame methodsFor!
initialize
	super initialize.
	cellPresenters := OrderedCollection new ! !
!LightsOutGame categoriesFor: #initialize!public! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self model cells do: [:eachCell | 
					| cp |
					cp := LightsOutCell createIn: self on: eachCell.
			cellPresenters  add: cp]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutGame methodsFor!
clearExistingCellPresenters
	cellPresenters do: [:each | each destroy]
! !
!LightsOutGame categoriesFor: #clearExistingCellPresenters!public! !

!LightsOutGame class methodsFor!
resource_Default_view
	"Answer the literal data from which the 'Default view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Default_view)
	"

	^#(#'!!STL' 4 788558 10 ##(Smalltalk.STBViewProxy) ##(Smalltalk.ShellView) 34 27 nil nil 8 #(13303808 65536) 416 nil 196934 1 ##(Smalltalk.RGB) 33488897 nil 37 nil nil nil 416 656390 ##(Smalltalk.GridLayout) 3 1 1 1 170 192 8 #() nil nil nil nil nil 1 nil nil nil nil 1 nil nil 983302 ##(Smalltalk.MessageSequence) 138 144 34 3 721670 ##(Smalltalk.MessageSend) #createAt:extent: 34 2 328198 ##(Smalltalk.Point) 3071 21 674 1051 801 416 626 #text: 34 1 8 'Lights Out' 416 626 #updateMenuBar 544 416 983302 ##(Smalltalk.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 5 0 0 10 0 0 0 12 8 0 0 154 1 0 0] 8 #() 674 193 193 nil 27 )! !
!LightsOutGame class categoriesFor: #resource_Default_view!public!resources-views! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self view layoutManager rows: self model size.
	self model cells do: [:eachCell | 
					| cp |
					cp := LightsOutCell createIn: self on: eachCell.
			cellPresenters  add: cp]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self view layoutManager rows: self model size.
	self model cells do: [:eachCell | 
					| cp |
					cp := LightsOutCell createIn: self on: eachCell.
			cellPresenters  add: cp]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutCell class methodsFor!
resource_Default_view
	"Answer the literal data from which the 'Default view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Default_view)
	"

	^#(#'!!STL' 4 788558 10 ##(Smalltalk.STBViewProxy) ##(Smalltalk.LightsOutCellView) 34 12 nil nil 34 2 8 1140850688 1 416 721990 2 ##(Smalltalk.ValueHolder) nil false 1310726 ##(Smalltalk.EqualitySearchPolicy) true nil nil 7 nil nil nil 416 983302 ##(Smalltalk.MessageSequence) 138 144 34 1 721670 ##(Smalltalk.MessageSend) #createAt:extent: 34 2 328198 ##(Smalltalk.Point) 3071 21 658 201 201 416 983302 ##(Smalltalk.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 5 0 0 10 0 0 0 99 6 0 0 110 0 0 0] 8 #() 658 193 193 nil 27 )! !
!LightsOutCell class categoriesFor: #resource_Default_view!public!resources-views! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self view layoutManager rows: self model size.
	self model cells do: [:eachCell | 
					| cp |
					cp := LightsOutCell createIn: self on: eachCell.
			cellPresenters  add: cp.
			cp when: #cellAction perform: [self toggleNeightborsOf: cp]]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self view layoutManager rows: self model size.
	self model cells do: [:eachCell | 
					| cp |
					cp := LightsOutCell createIn: self on: eachCell.
			cellPresenters  add: cp.
			cp when: #cellAction perform: [self toggleNeightborsOf: cp]]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self view layoutManager rows: self model size.
	self model cells do: [:eachCell | 
					| cp |
					cp := LightsOutCell createIn: self on: eachCell.
			cellPresenters  add: cp.
			cp when: #cellAction perform: [self toggleNeighborsOf: cp]]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutGame methodsFor!
toggleNeighborsOf: aLightsOutCell 
	^Error notYetImplemented! !
!LightsOutGame categoriesFor: #toggleNeighborsOf:!public! !

!LightsOutGame methodsFor!
toggleNeighborsOf: aLightsOutCell 
	(self neighborsOf: aLightsOutCell) do: [:eachCell | eachCell toggle]! !
!LightsOutGame categoriesFor: #toggleNeighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	^Error notYetImplemented! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	| cpRect |
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each | | eachRect |
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter | (eachRect leftCenter = cpRect rightCenter ) | 	
		(eachRect  topCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	| cpRect |
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each | | eachRect |
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter | (eachRect leftCenter = cpRect rightCenter ) | 	
		(eachRect  topCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutCell methodsFor!
toggle
	^Error notYetImplemented! !
!LightsOutCell categoriesFor: #toggle!public! !

!LightsOutCell methodsFor!
toggle
	self model value: self model value not ! !
!LightsOutCell categoriesFor: #toggle!public! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self view layoutManager rows: self model size.
	self model cells do: [:eachCell | 
					| cp |
					cp := LightsOutCell createIn: self on: eachCell.
			cellPresenters  add: cp.
			cp when: #cellAction perform: [self toggleNeighborsOf: cp]]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutGame methodsFor!
initialize
	super initialize.
	cellPresenters := OrderedCollection new ! !
!LightsOutGame categoriesFor: #initialize!public! !

!LightsOutGame methodsFor!
initialize
	super initialize.
	cellPresenters := OrderedCollection new ! !
!LightsOutGame categoriesFor: #initialize!public! !

!LightsOutGame methodsFor!
clearExistingCellPresenters
	cellPresenters do: [:each | each destroy]
! !
!LightsOutGame categoriesFor: #clearExistingCellPresenters!public! !

!LightsOutGame methodsFor!
initialize
	super initialize.
	cellPresenters := OrderedCollection new ! !
!LightsOutGame categoriesFor: #initialize!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	| cpRect |
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each | | eachRect |
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter | (eachRect leftCenter = cpRect rightCenter ) | 	
		(eachRect  topCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
onViewOpened
	super onViewOpened.
	self createCellPresenters
	! !
!LightsOutGame categoriesFor: #onViewOpened!public! !

!LightsOutGame methodsFor!
toggleNeighborsOf: aLightsOutCell 
	(self neighborsOf: aLightsOutCell) do: [:eachCell | eachCell toggle]! !
!LightsOutGame categoriesFor: #toggleNeighborsOf:!public! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self view layoutManager rows: self model size.
	self model cells do: [:eachCell | 
					| cp |
					cp := LightsOutCell createIn: self on: eachCell.
			cellPresenters  add: cp.
			cp when: #cellAction perform: [self toggleNeighborsOf: cp]]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutBoard class methodsFor!
new	
	^self withSize: self defaultSize! !
!LightsOutBoard class categoriesFor: #new!public! !

!LightsOutBoard class methodsFor!
defaultSize
	^10! !
!LightsOutBoard class categoriesFor: #defaultSize!public! !

!LightsOutBoard methodsFor!
setSize: anInteger
	cells := (1 to: anInteger squared) collect: [:each | true asValue]! !
!LightsOutBoard categoriesFor: #setSize:!public! !

!LightsOutBoard methodsFor!
cells
	^cells! !
!LightsOutBoard categoriesFor: #cells!public! !

!LightsOutBoard methodsFor!
size 
	^cells size sqrt truncated ! !
!LightsOutBoard categoriesFor: #size!public! !

!LightsOutGame class methodsFor!
defaultModel	
	^LightsOutBoard new! !
!LightsOutGame class categoriesFor: #defaultModel!public! !

!LightsOutGame methodsFor!
initialize
	super initialize.
	cellPresenters := OrderedCollection new ! !
!LightsOutGame categoriesFor: #initialize!public! !

!LightsOutGame methodsFor!
clearExistingCellPresenters
	cellPresenters do: [:each | each destroy]
! !
!LightsOutGame categoriesFor: #clearExistingCellPresenters!public! !

!LightsOutGame class methodsFor!
resource_Default_view
	"Answer the literal data from which the 'Default view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Default_view)
	"

	^#(#'!!STL' 4 788558 10 ##(Smalltalk.STBViewProxy) ##(Smalltalk.ShellView) 34 27 nil nil 8 #(13303808 65536) 416 nil 196934 1 ##(Smalltalk.RGB) 33488897 nil 37 nil nil nil 416 656390 ##(Smalltalk.GridLayout) 3 1 1 1 170 192 8 #() nil nil nil nil nil 1 nil nil nil nil 1 nil nil 983302 ##(Smalltalk.MessageSequence) 138 144 34 3 721670 ##(Smalltalk.MessageSend) #createAt:extent: 34 2 328198 ##(Smalltalk.Point) 3071 21 674 1051 801 416 626 #text: 34 1 8 'Lights Out' 416 626 #updateMenuBar 544 416 983302 ##(Smalltalk.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 5 0 0 10 0 0 0 12 8 0 0 154 1 0 0] 8 #() 674 193 193 nil 27 )! !
!LightsOutGame class categoriesFor: #resource_Default_view!public!resources-views! !

LightsOutGame removeFromSystem!

LightsOutBoard removeFromSystem!

Object subclass: #LightsOutBoard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
LightsOutBoard guid: (GUID fromString: '{cfbdab2c-f5cf-4fbe-a3e6-4dcd3769bdeb}')!
LightsOutBoard comment: ''!
!LightsOutBoard categoriesForClass!Kernel-Objects! !
!LightsOutBoard class methodsFor!
withSize: anInteger
	^super new setSize: anInteger! !
!LightsOutBoard class categoriesFor: #withSize:!public! !

!LightsOutBoard class methodsFor!
new 
	^self withSize: self defaultSize! !
!LightsOutBoard class categoriesFor: #new!public! !

!LightsOutBoard class methodsFor!
defaultSize
	^10! !
!LightsOutBoard class categoriesFor: #defaultSize!public! !

Object subclass: #LightsOutBoard
	instanceVariableNames: 'cells'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!LightsOutBoard methodsFor!
setSize: anInteger
	cells := (1 to: anInteger squared) collect: [:each | true asValue]! !
!LightsOutBoard categoriesFor: #setSize:!public! !

!LightsOutBoard methodsFor!
cells
	^cells! !
!LightsOutBoard categoriesFor: #cells!public! !

!LightsOutBoard methodsFor!
size	
	^cells size sqrt truncated! !
!LightsOutBoard categoriesFor: #size!public! !

Shell subclass: #LightsOutGame
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
LightsOutGame guid: (GUID fromString: '{14160d44-d26c-4731-b479-a954946ac145}')!
LightsOutGame comment: ''!
!LightsOutGame categoriesForClass!MVP-Presenters! !
!LightsOutGame class methodsFor!
defaultModel	
	^LightsOutBoard new! !
!LightsOutGame class categoriesFor: #defaultModel!public! !

!LightsOutGame methodsFor!
onViewOpened
	super onViewOpened.
	self createCellPresenters! !
!LightsOutGame categoriesFor: #onViewOpened!public! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self model cells do: [:eachCell |
					| cp |
					cp := LightsOutCell createIn: self on: eachCell ]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

Shell subclass: #LightsOutGame
	instanceVariableNames: 'cellPresenters'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!LightsOutGame methodsFor!
initialize
	super initialize.
	cellPresenters := OrderedCollection new ! !
!LightsOutGame categoriesFor: #initialize!public! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self model cells do: [:eachCell |
					| cp |
					cp := LightsOutCell createIn: self on: eachCell.
cellPresenters add: cp]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutGame methodsFor!
clearExistingCellPresenters
	cellPresenters do: [:each |  each destroy]! !
!LightsOutGame categoriesFor: #clearExistingCellPresenters!public! !

!LightsOutGame class methodsFor!
resource_Default_view
	"Answer the literal data from which the 'Default view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Default_view)
	"

	^#(#'!!STL' 4 788558 10 ##(Smalltalk.STBViewProxy) ##(Smalltalk.ShellView) 34 27 nil nil 8 #(13303808 65536) 416 nil 196934 1 ##(Smalltalk.RGB) 33488897 nil 37 nil nil nil 416 656390 ##(Smalltalk.GridLayout) 3 1 1 1 170 192 8 #() nil nil nil nil nil 1 nil nil nil nil 1 nil nil 983302 ##(Smalltalk.MessageSequence) 138 144 34 3 721670 ##(Smalltalk.MessageSend) #createAt:extent: 34 2 328198 ##(Smalltalk.Point) 3071 21 674 981 811 416 626 #text: 34 1 8 'Lights Out' 416 626 #updateMenuBar 544 416 983302 ##(Smalltalk.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 5 0 0 10 0 0 0 233 7 0 0 159 1 0 0] 8 #() 674 193 193 nil 27 )! !
!LightsOutGame class categoriesFor: #resource_Default_view!public!resources-views! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self view layoutManager rows: self model size.
	self model cells do: [:eachCell |
					| cp |
					cp := LightsOutCell createIn: self on: eachCell.
cellPresenters add: cp]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self view layoutManager rows: self model size.
	self model cells do: [:eachCell |
					| cp |
					cp := LightsOutCell createIn: self on: eachCell.
cellPresenters add: cp.
	cp when: #cellAction perform: [self toggleNeighborsOf: cp]]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutCellView methodsFor!
onLeftButtonReleased: aMouseEvent 
		self presenter trigger: #cellAction! !
!LightsOutCellView categoriesFor: #onLeftButtonReleased:!public! !

!LightsOutGame methodsFor!
toggleNeighborsOf: aLightsOutCell 
	^Error notYetImplemented! !
!LightsOutGame categoriesFor: #toggleNeighborsOf:!public! !

!LightsOutGame methodsFor!
toggleNeighborsOf: aLightsOutCell 
	(self neighborsOf: aLightsOutCell) do: [:eachCell | eachCell toggle]! !
!LightsOutGame categoriesFor: #toggleNeighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	^Error notYetImplemented! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	| cpRect |
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [: each | | eachRect |
	eachRect := each view rectangle.
	eachRect rightCenter = cpRect leftCenter | (eachRect leftCenter = cpRect rightCenter) |	
	(eachRect topCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	| cpRect |
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [: each | | eachRect |
	eachRect := each view rectangle.
	eachRect rightCenter = cpRect leftCenter | (eachRect leftCenter = cpRect rightCenter) |	
	(eachRect topCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

game model: (LightsOutBoard withSize: 5)!

!LightsOutGame methodsFor!
model: aLightsOutGameBoard
	super model: aLightsOutGameBoard.
	self hasView ifTrue: [self createCellPresenters]! !
!LightsOutGame categoriesFor: #model:!public! !

game model: (LightsOutBoard withSize: 5)!

game model: (LightsOutBoard withSize: 5)!

!LightsOutGame methodsFor!
model: aLightsOutGameBoard
	super model: aLightsOutGameBoard.
	self hasView ifTrue: [self createCellPresenters]! !
!LightsOutGame categoriesFor: #model:!public! !

!LightsOutGame methodsFor!
model: aLightsOutGameBoard
	super model: aLightsOutGameBoard.
	self hasView ifTrue: [self createCellPresenters]! !
!LightsOutGame categoriesFor: #model:!public! !

game model: (LightsOutBoard withSize: 5)!

game model: (LightsOutBoard withSize: 5)!

game model: (LightsOutBoard withSize: 5)!

game model: (LightsOutBoard withSize: 5)!

game model: (LightsOutBoard withSize: 5).!

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	| cpRect |
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [: each | | eachRect |
	eachRect := each view rectangle.
	eachRect topRight = cpRect bottomLeft | (eachRect bottomLeft = cpRect topRight) |	
	(eachRect topLeft = cpRect bottomRight ) | (eachRect bottomRight = cpRect topLeft )]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

LightsOutGame createIconMethod!

!LightsOutGame class methodsFor!
icon

	"Generated from:
	self createIconMethod: #icon ofSize: 48@48 fromFile: 'C:\Users\Sohail-PC\Desktop\LightsOut.PNG'.
	"
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 48 0 0 0 48 8 6 0 0 0 87 2 249 135 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 9 112 72 89 115 0 0 14 195 0 0 14 195 1 199 111 168 100 0 0 8 11 73 68 65 84 104 67 237 153 89 84 86 85 20 199 191 50 203 52 43 211 230 121 110 101 101 131 217 168 77 218 106 73 153 84 80 142 164 171 65 173 212 108 176 44 93 242 129 136 32 40 41 50 9 38 200 36 40 131 3 50 11 40 106 72 229 4 104 66 133 67 78 41 24 10 102 178 219 255 35 231 184 143 61 244 208 67 235 182 122 216 203 245 255 113 188 223 221 247 238 125 246 222 231 186 166 20 19 57 213 190 204 59 78 174 49 43 50 168 228 167 177 198 110 13 219 67 97 235 231 24 93 88 55 129 218 249 158 162 156 31 62 53 44 114 99 8 93 31 186 223 104 216 132 220 197 244 204 194 111 45 214 63 113 29 141 90 158 101 177 75 3 155 40 97 211 52 163 151 84 77 166 14 211 90 172 53 1 101 209 116 127 228 15 22 243 201 92 69 94 139 139 45 246 82 194 70 114 205 44 159 71 68 79 27 187 47 98 39 21 255 56 222 232 19 127 244 163 243 220 127 208 209 150 254 134 109 216 61 138 238 152 83 111 52 108 94 197 44 242 78 227 199 34 216 200 172 21 52 99 77 164 197 46 15 106 160 234 131 195 141 222 221 248 26 117 10 56 110 173 201 170 153 68 79 45 248 222 98 83 138 23 210 248 85 105 22 123 35 113 149 179 29 240 140 203 34 215 139 73 229 20 188 54 194 216 213 33 135 212 107 215 58 112 77 20 157 203 33 228 95 58 223 176 177 57 233 124 35 71 140 134 189 146 90 74 61 216 121 201 122 197 84 145 7 135 145 100 157 166 53 211 39 121 201 70 79 46 90 72 231 251 253 110 173 25 145 185 146 110 225 80 150 172 95 252 70 234 189 96 147 197 122 132 108 32 151 107 42 145 83 173 253 103 191 144 203 175 36 150 14 55 191 100 172 123 120 29 101 111 255 220 232 125 77 158 42 132 234 27 188 13 43 168 157 64 183 125 181 219 104 24 66 113 96 74 153 197 134 46 205 163 169 171 23 88 172 219 140 70 14 193 209 70 111 219 239 67 29 3 154 173 53 137 155 253 232 137 216 45 22 251 52 63 153 70 115 100 72 230 17 179 204 217 57 48 48 54 227 63 224 192 77 179 127 161 199 99 183 26 235 200 73 214 61 252 71 163 31 157 191 141 206 153 218 74 143 112 66 106 118 95 68 45 93 232 223 98 52 236 150 176 189 212 53 168 209 98 87 4 31 166 27 103 237 179 88 123 126 24 15 240 30 175 117 207 168 26 85 103 228 154 187 230 254 76 23 79 111 178 216 117 161 7 212 6 35 217 85 190 59 201 117 251 156 93 212 151 51 92 219 69 252 52 30 138 218 110 244 179 11 43 233 28 223 86 122 250 235 239 12 235 21 83 173 28 213 26 134 31 189 146 111 88 178 107 66 14 170 92 145 236 124 191 147 244 216 252 173 70 247 142 219 68 237 220 167 172 53 216 205 186 4 30 181 24 30 208 13 179 246 91 236 90 191 29 206 14 33 239 69 185 255 1 7 130 203 35 168 181 245 25 99 112 160 168 238 67 163 91 78 62 175 28 104 108 246 48 108 253 174 209 202 1 173 97 225 21 179 149 3 146 141 96 7 2 217 1 201 224 64 213 1 31 163 119 53 120 41 7 228 154 204 154 47 148 3 146 77 102 7 198 177 3 146 13 78 45 36 87 7 255 19 42 97 180 33 161 80 45 207 176 99 170 104 116 230 127 53 235 196 251 54 170 243 153 53 77 132 235 180 119 159 180 88 123 142 247 179 175 143 124 66 158 105 221 57 224 24 111 18 100 173 233 200 205 29 30 154 100 23 112 181 70 197 150 236 138 233 71 201 213 135 203 243 135 236 153 182 110 220 34 120 45 94 109 244 216 156 37 124 179 173 244 30 119 173 154 13 74 47 80 73 166 53 12 201 126 7 111 8 146 117 159 87 167 146 84 50 236 94 62 25 171 140 126 59 123 153 114 84 174 25 144 188 70 237 58 146 97 55 124 32 106 135 197 30 142 168 115 118 14 12 227 223 115 180 3 62 105 69 228 122 103 89 54 229 213 126 108 76 119 129 90 175 220 49 81 229 69 22 39 150 102 115 54 132 169 87 172 53 236 3 14 53 252 168 100 47 44 218 64 111 101 47 183 216 37 28 187 177 223 6 25 157 180 217 205 121 210 98 173 241 93 29 199 15 178 214 98 232 171 208 241 74 230 17 95 233 236 110 180 91 64 19 185 222 95 185 148 202 235 223 51 134 202 57 247 155 217 70 151 252 52 78 85 202 130 218 143 12 155 95 25 196 85 113 159 209 176 143 243 82 232 57 78 100 201 48 107 96 100 149 236 210 192 223 40 121 139 219 104 188 217 14 188 235 200 53 8 59 180 27 146 141 204 90 73 175 115 200 72 54 32 129 231 1 103 231 0 215 1 199 59 48 32 121 45 133 148 135 27 67 199 55 102 69 166 209 65 107 35 85 209 10 40 141 49 108 92 78 26 93 30 124 196 104 216 171 169 37 116 127 228 78 139 245 226 14 22 97 36 217 69 92 4 39 230 39 25 61 165 248 107 85 160 228 26 56 142 211 17 201 158 79 168 160 62 236 148 100 125 162 171 200 133 202 136 93 70 27 146 3 55 124 54 147 26 127 255 43 107 85 109 183 100 184 246 223 93 255 159 92 171 139 251 8 185 48 172 55 112 159 163 13 213 115 57 143 148 90 31 56 54 80 133 208 238 70 47 195 10 185 87 66 178 107 13 11 225 80 244 228 145 82 178 161 75 115 213 150 40 25 70 202 111 246 140 50 186 234 192 112 30 41 143 91 107 146 56 201 49 82 74 166 70 74 142 12 201 188 19 11 156 157 3 195 211 28 238 128 23 218 233 135 163 171 233 205 204 28 99 93 102 28 85 21 84 235 225 25 185 42 246 134 44 201 55 12 137 137 110 80 107 216 99 220 108 221 204 227 169 100 152 246 122 70 215 88 12 221 169 103 74 169 209 222 188 183 227 1 201 53 168 39 87 205 252 213 98 56 106 188 155 71 93 201 110 159 201 35 229 101 124 195 152 139 181 97 228 195 127 150 12 73 134 217 86 235 107 120 167 66 235 44 215 116 229 216 70 27 46 25 218 102 60 16 201 144 124 215 134 30 52 26 103 172 120 64 114 13 102 105 56 42 25 10 32 30 154 100 221 220 123 157 29 66 67 146 29 62 82 14 73 201 227 145 146 59 207 83 60 158 105 131 3 24 41 181 110 110 27 41 177 109 105 182 174 109 164 212 26 22 206 253 147 23 59 32 217 8 238 95 2 203 162 44 6 7 182 241 72 169 117 125 219 72 41 215 100 86 127 161 138 150 100 147 139 226 121 164 76 183 216 160 20 222 133 46 240 199 152 134 113 241 180 33 70 113 100 162 53 70 73 228 0 70 63 205 16 235 40 64 90 195 78 143 148 24 3 207 48 76 90 103 95 31 241 142 27 214 26 121 130 162 37 215 92 200 205 93 187 179 174 117 122 164 196 200 122 134 117 245 111 32 23 94 21 62 78 104 195 169 51 62 36 104 61 46 39 93 85 70 116 173 154 13 230 29 9 35 165 214 48 236 28 120 43 146 221 211 54 82 74 134 145 18 59 136 214 239 100 103 43 71 229 154 151 147 203 212 188 33 25 70 202 7 163 182 91 172 231 188 90 167 23 178 98 167 59 192 221 232 164 194 69 84 119 120 144 49 28 17 38 109 241 51 186 230 208 48 21 143 155 247 141 52 44 163 250 75 186 57 108 175 209 48 119 73 156 250 152 33 25 146 122 98 126 162 197 80 119 242 121 56 210 186 188 126 140 202 57 185 38 122 99 176 58 139 149 12 167 35 216 20 36 123 45 177 204 225 35 229 244 227 228 122 61 189 144 22 124 23 104 12 149 17 253 186 214 49 149 193 106 199 137 168 8 53 12 159 133 80 173 181 134 13 227 150 3 135 190 146 33 129 177 33 72 214 153 195 37 160 44 198 232 208 242 185 188 83 157 176 214 224 19 214 157 28 162 146 225 172 8 51 129 100 125 227 182 58 59 7 222 76 119 120 18 43 7 60 146 214 169 31 209 118 245 204 67 132 179 34 173 241 186 17 66 110 30 76 52 67 77 192 17 164 214 48 124 31 195 89 142 100 232 116 251 39 174 183 24 138 224 71 185 169 70 79 42 76 80 35 165 92 131 163 71 124 15 144 172 111 124 37 61 25 183 217 98 189 99 182 59 253 92 136 147 24 35 101 99 139 135 49 53 82 238 248 204 232 131 199 94 86 33 132 87 173 89 81 221 120 53 82 106 13 11 89 23 78 158 169 101 22 27 214 54 82 74 134 145 178 98 207 187 70 35 156 240 149 82 174 73 222 226 171 70 74 201 176 177 224 176 65 178 161 139 75 255 79 98 99 255 154 3 104 144 112 112 170 13 77 90 191 248 10 163 7 47 41 80 29 36 142 245 52 123 97 209 122 213 13 106 13 235 197 149 19 83 155 100 183 114 152 225 76 95 50 236 249 56 139 210 250 149 212 18 245 128 228 26 124 80 196 7 67 201 238 229 13 2 93 130 100 61 230 214 211 159 154 172 28 57 253 188 116 190 0 0 0 0 73 69 78 68 174 66 96 130]! !
!LightsOutGame class categoriesFor: #icon!constants!public! !

!LightsOutGame class methodsFor!
initialize	
	"
	self initialize 'Lights Out Game'
	"
	Smalltalk developmentSystem addSamplesFolderIconFor: self description: 'Lights Out Game' ! !
!LightsOutGame class categoriesFor: #initialize!public! !

!LightsOutGame class methodsFor!
initialize	
	"
	self initialize 'Lights Out Game'
	"
	Smalltalk developmentSystem addSamplesFolderIconFor: self description: 'Lights Out Game' ! !
!LightsOutGame class categoriesFor: #initialize!public! !

!LightsOutGame class methodsFor!
initialize	
	"
	self initialize 'Lights Out Game'
	"
	Smalltalk developmentSystem addSamplesFolderIconFor: self description: 'Lights Out Game' ! !
!LightsOutGame class categoriesFor: #initialize!public! !

!LightsOutGame class methodsFor!
initialize	
	"
	self initialize 
	"
	Smalltalk developmentSystem addSamplesFolderIconFor: self description: 'Lights Out Game' ! !
!LightsOutGame class categoriesFor: #initialize!public! !

	Smalltalk developmentSystem addSamplesFolderIconFor: self description: 'Lights Out Game' !

!LightsOutGame class methodsFor!
uninitialize
	Smalltalk developmentSystem removeSystemFolderIconNamed: 'Lights Out Game'! !
!LightsOutGame class categoriesFor: #uninitialize!public! !

